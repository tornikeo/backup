// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Adder16.hdl

/**
 * Adds two 16-bit values.
 * The most significant carry bit is ignored.
 */

CHIP Add16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
   // Put you code here:
  Xor(a=a[0], b=b[0], out=out[0]);
  And(a=a[0], b=b[0], out=c0);// c nashtebia
  
  Xor(a=a[1], b=b[1], out=d1);
  Xor(a=d1, b=c0, out=out[1]);
  And(a=d1, b=c0, out=c1);

  Xor(a=a[2], b=b[2], out=d2);
  Xor(a=d2, b=c1, out=out[2]);
  And(a=d2, b=c1, out=c2);
  
  Xor(a=a[3], b=b[3], out=d3);
  Xor(a=d3, b=c2, out=out[3]);
  And(a=d3, b=c2, out=c3);
  
  Xor(a=a[4], b=b[4], out=d4);
  Xor(a=d4, b=c3, out=out[4]);
  And(a=d4, b=c3, out=c4);
  
  Xor(a=a[5], b=b[5], out=d5);
  Xor(a=d5, b=c4, out=out[5]);
  And(a=d5, b=c4, out=c5);
  
  Xor(a=a[6], b=b[6], out=d6);
  Xor(a=d6, b=c5, out=out[6]);
  And(a=d6, b=c5, out=c6);
  
  Xor(a=a[7], b=b[7], out=d7);
  Xor(a=d7, b=c6, out=out[7]);
  And(a=d7, b=c6, out=c7);
  
  Xor(a=a[8], b=b[8], out=d8);
  Xor(a=d8, b=c7, out=out[8]);
  And(a=d8, b=c7, out=c8);
  
  Xor(a=a[9], b=b[9], out=d9);
  Xor(a=d9, b=c8, out=out[9]);
  And(a=d9, b=c8, out=c9);
  
  Xor(a=a[10], b=b[10], out=d10);
  Xor(a=d10, b=c9, out=out[10]);
  And(a=d10, b=c9, out=c10);
  
  Xor(a=a[11], b=b[11], out=d11);
  Xor(a=d11, b=c10, out=out[11]);
  And(a=d11, b=c10, out=c11);
  
  Xor(a=a[12], b=b[12], out=d12);
  Xor(a=d12, b=c11, out=out[12]);
  And(a=d12, b=c11, out=c12);
  
  Xor(a=a[13], b=b[13], out=d13);
  Xor(a=d13, b=c12, out=out[13]);
  And(a=d13, b=c12, out=c13);
  
  Xor(a=a[14], b=b[14], out=d14);
  Xor(a=d14, b=c13, out=out[14]);
  And(a=d14, b=c13, out=c14);
  
  Xor(a=a[15], b=b[15], out=d15);
  Xor(a=d15, b=c14, out=out[15]);
}